
//*************************************************************************************************
//
// Параметры для расчета углов положения трекера
//
//*************************************************************************************************

#ifndef __TRC_CALC_H
#define __TRC_CALC_H

#include <stdint.h>
#include <stdbool.h>

#include "device.h"

//*************************************************************************************************
// Константы
//*************************************************************************************************
#define RAD_TO_DEGREE       ( 180/3.141516 ) //перевод радиан в градусы
#define DEGREE_TO_RAD       ( 3.141516/180 ) //перевод градусов в радианы

#define TIME_BEGIN_TRACK    15              //задержка (сек) начала контроля положения солнца, после восхода,
                                            //и освещенности солнечного сенсора

#define TIME_SENSOR_ON      120             //задержка (сек) выключения режима "командный" на контроллере трекера
                                            //после появления освещенности сенсора
#define TIME_SENSOR_OFF     120             //задержка (сек) включения режима "командный" на контроллере трекера
                                            //после затенения солнца

//*************************************************************************************************
// Размеры сторон треугольников для расчета углов
//*************************************************************************************************
#define VERT_A              547L            //расстояние от центральной опоры (точка поворота) 
                                            //до точки крепления штока актуатора (мм)

#define VERT_B              547L            //расстояние от центральной опоры (точка поворота) 
                                            //до точки крепления актуатора (мм)

#define HORZ_A              517L            //расстояние от центральной опоры (точка поворота) 
                                            //до точки крепления актуатора (мм)

#define HORZ_B              517L            //расстояние от центральной опоры (точка поворота) 
                                            //до точки крепления штока актуатора (мм)

//*************************************************************************************************
// Граничные параметры для актуаторов
//*************************************************************************************************
#define MIN_VALUE_VERT      0               //минимальное значение длинны штока вертикального актуатора (мм)
#define MAX_VALUE_VERT      900             //максимальное значение длинны штока вертикального актуатора (мм)

#define MIN_VALUE_HORZ      0               //минимальное значение длинны штока горизонтального актуатора (мм)
#define MAX_VALUE_HORZ      900             //максимальное значение длинны штока горизонтального актуатора (мм)

//*************************************************************************************************
// Граничные параметры для углов
//*************************************************************************************************
#define VERT_ANGLE_CORRECT  14.64L          //угол коррекции склонения (начальный угол)

#define MIN_ANGLE_AZIMUT    54.51L          //минимальное значение азимута на восходе
#define MAX_ANGLE_AZIMUT    305.20L         //максимальное значение азимута на закате


//*************************************************************************************************
// Функции статуса
//*************************************************************************************************
float AngleVert( uint16_t len_stem );
float AngleHorz( uint16_t len_stem );
uint16_t StemVert( float angle );
uint16_t StemHorz( float angle );
char *PosAngle( uint16_t pos, TrackerAct trc );
char *TrackerSensor( uint16_t data );
char *TrackerLimSw( uint16_t data );

#endif

