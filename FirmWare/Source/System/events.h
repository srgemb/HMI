
//*************************************************************************************************
//
// Константы сообщений
//
//*************************************************************************************************

#ifndef __EVENTS_H
#define __EVENTS_H

#include "cmsis_os2.h"

//*************************************************************************************************
// ID объектов
//*************************************************************************************************
extern osMutexId_t command_mutex;
extern osSemaphoreId_t sem_wait;
extern osEventFlagsId_t job_event;
extern osEventFlagsId_t log_event;

extern osMessageQueueId_t sock1_queue, cmd_queue, cmd_msg;
extern osMessageQueueId_t sock2_queue, data_queue, link_msg;
extern osMessageQueueId_t command_queue, uart_queue, log_msg;

//*************************************************************************************************
// Флаги событий
//*************************************************************************************************
#define EVN_RTC_IRQ             0x10000000  //прерывание от RTC
#define EVN_RTC_SECONDS         0x01000000  //секундный интервал от RTC
#define EVN_RTC_1MINUTES        0x02000000  //минутный интервал от RTC
#define EVN_RTC_5MINUTES        0x04000000  //5-минутный интервал от RTC

#define MSG_COMMAND_UART        0x00000001  //источник команды - консоль
#define MSG_COMMAND_TELNET      0x00000002  //источник команды - telnet
#define MSG_COMMAND_TCP         0x00000003  //источник команды - TCP запрос
#define MSG_ACK_SEND_TCP        0x00000005  //источник команды - TCP подтверждение отправки/
                                            //приема предыдущего пакета

#define MSG_UART_SEND_BUSY      0x00000010  //UART занят передачей информации

//*************************************************************************************************
// Флаги событий модуля net.c
//*************************************************************************************************
#define MSG_SOCKET_CONNECT      0x00000020  //подтверждения подключение клиента
#define MSG_TCP_DATA_RECV       0x00000080  //принят новый блок данных в двоичном формате

//*************************************************************************************************
// Флаги событий управления подсветкой дисплея
//*************************************************************************************************
#define MSG_LCD_BACK_SLOW_ON    0x00000040  //плавное включение подсветки
#define MSG_LCD_BACK_SLOW_OFF   0x00000041  //плавное выключение подсветки
#define MSG_LCD_BACK_SLOW_STOP  0x00000042  //останавливаем плавное выключение если оно уже началось

//*************************************************************************************************
// Флаги событий таймеров логирования данных
//*************************************************************************************************
#define EVN_TIMER_BATMON        0x00000001  //логирование данных монитора АКБ
#define EVN_TIMER_MPPT          0x00000002  //логирование данных контроллера MPPT
#define EVN_TIMER_CHARGE        0x00000004  //логирование данных контроллера заряда
#define EVN_TIMER_INV           0x00000008  //логирование данных инверторов
#define EVN_TIMER_ALT           0x00000010  //логирование данных блока АВР
#define EVN_TIMER_GEN           0x00000020  //логирование данных генератора
#define EVN_TIMER_TRC           0x00000040  //логирование данных контроллера трекера

#define EVN_TIMER_MASK          0x010000FF  //маска событий логирования данных

//*************************************************************************************************
// Флаги событий планировщик заданий
//*************************************************************************************************
#define EVN_SCHEDULER_LOAD      0x00000001  //сигнал загрузки файла заданий
#define EVN_SCHEDULER_MASK      EVN_RTC_SECONDS | EVN_SCHEDULER_LOAD //маска событий

#endif
